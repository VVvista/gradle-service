// 版本
class ProjectVersion {
    int major
    int minor

    boolean release

    ProjectVersion(int major, int minor, int min) {
        this.major = major
        this.minor = minor
        this.release = false
    }

    ProjectVersion(int major, int minor,  boolean release) {
        this.major = major
        this.minor = minor
        this.release = release
    }


    @Override
    public String toString() {
        return "$major.$minor.${release ? '' : '-SNAPSHOT'}"
    }
}

ext.versionFile=file('version.properties')
task loadVersion{
    project.version=readVersion()
}

ProjectVersion readVersion(){
    logger.quiet 'reading the version file'
    if(!versionFile.exists()){
        //throw new GradleScriptException("required version file does not exist:${versionFile.canonicalPath}")
    }
    Properties versionProps=new Properties()
    versionFile.withInputStream{
        stream->versionProps.load(stream)
    }
    new ProjectVersion(versionProps.major.toInteger(),versionProps.minor.toInteger(),
            versionProps.release.toBoolean())

}
task printVersion << {
    println(" >>>>>> the verson is ${version}")
}
